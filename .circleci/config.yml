# build and deploy container to dockerhub
services:
  - docker

stages:
  - build
  - name: deploy
    if: branch = master

sudo: required
dist: xenial

jobs:
  build:
    docker:
      - image: circleci/python:3.6.4
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    steps: 
      - checkout
      # pull the data from public osf repo
      # note that secure environment variables are set within travis
      - run: sudo pip3 install -U pip
      - run: sudo pip3 install osfclient
      - run: sudo pip3 install -U pyopenssl
      - run: wget --quiet https://curl.haxx.se/ca/cacert.pem
      - run: export SSL_CERT_FILE=$HOME/cacert.pem
      - run: osf fetch data/fluency/transition_probs.csv data/transition_probs.csv
      # now lets build the container
      # - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - run: make build
      # now test that it works by running the simulation
      - run: docker run adamnhornsby/fluency-model:latest python3 ./ fit all
  deploy:
    docker:
      - image: circleci/python:3.6.4
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    steps: 
      - checkout
      - run: sudo pip3 install pip
      - run: sudo pip3 install osfclient
      - run: osf fetch data/fluency/transition_probs.csv data/transition_probs.csv
      # pull the data from public osf repo
      # note that secure environment variables are set within travis
      - run: osf fetch data/fluency/transition_probs.csv data/transition_probs.csv
      # now lets build the container
      # - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - run: make build
      - run: make deploy